services:
  app:
    image: hr
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - 8000:8000
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/app
    command: ./entrypoint.sh
    volumes:
    - ./horilla:/app/horilla
    depends_on:
      db:
        condition: service_healthy
  app2:
    image: hr
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - 8001:8000
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/app2
    command: ./entrypoint.sh
    volumes:
    - ./horilla:/app/horilla
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16-bullseye
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
    - 5432:5432
    restart: unless-stopped
    volumes:
    - horilla-data:/var/lib/postgresql/data
    - ./docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
      - CMD
      - pg_isready
      - -U
      - postgres
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  horilla-data: null
